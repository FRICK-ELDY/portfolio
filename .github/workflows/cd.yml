name: Continuous Deployment

on:
  push:
    branches:
      - main
  workflow_run:
    workflows: ["Continuous Integration"]
    types:
      - completed

jobs:
  build-and-push:
    name: Build and Push Docker Image to GHCR
    runs-on: ubuntu-latest

    permissions:
      packages: write
      contents: read

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and Push Docker Image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: ghcr.io/frick-eldy/portfolio:latest
          file: ./umbrella/Dockerfile
          build-args: MIX_ENV=prod

  deploy:
    name: Deploy to Production Server
    runs-on: ubuntu-latest
    needs: build-and-push

    steps:
    - name: Setup SSH Agent
      uses: webfactory/ssh-agent@v0.5.3
      with:
        ssh-private-key: ${{ secrets.SAKURA_SSH_KEY }}

    - name: Setup SSH Known Hosts
      run: |
        mkdir -p ~/.ssh
        echo "${{ secrets.SAKURA_HOST_KEY }}" > ~/.ssh/known_hosts
        chmod 644 ~/.ssh/known_hosts

    - name: Create folders on remote server
      run: |
        ssh ${{ secrets.SAKURA_USER }}@${{ secrets.SAKURA_HOST }} << 'EOF'
          mkdir -p ~/portfolio
          mkdir -p ~/portfolio/nginx
        EOF

    - name: Create .env file
      run: |
        cat <<EOF > .env
        MIX_ENV=prod
        PORT=${{ secrets.PORT }}
        PHX_HOST=${{ secrets.PHX_HOST }}
        SECRET_KEY_BASE=${{ secrets.SECRET_KEY_BASE }}
        CERTBOT_EMAIL=${{ secrets.CERTBOT_EMAIL }}
        EOF

    - name: Copy compose files, nginx config, and .env to server
      run: |
        echo "Copying docker-compose files to server..."
        scp -o StrictHostKeyChecking=yes ./compose.prod.yml ${{ secrets.SAKURA_USER }}@${{ secrets.SAKURA_HOST }}:/home/${{ secrets.SAKURA_USER }}/portfolio/compose.yml
        echo "Copying nginx configuration to server..."
        scp -o StrictHostKeyChecking=yes ./nginx/nginx.prod.conf ${{ secrets.SAKURA_USER }}@${{ secrets.SAKURA_HOST }}:/home/${{ secrets.SAKURA_USER }}/portfolio/nginx/nginx.prod.conf
        echo "Copying .env to server..."
        scp -o StrictHostKeyChecking=yes .env ${{ secrets.SAKURA_USER }}@${{ secrets.SAKURA_HOST }}:/home/${{ secrets.SAKURA_USER }}/portfolio/.env
    
    - name: SSH into server and deploy
      run: |
        ssh ${{ secrets.SAKURA_USER }}@${{ secrets.SAKURA_HOST }} << 'EOF'
        set -e
        echo "Logging into GHCR..."
        echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io -u ${{ github.actor }} --password-stdin

        echo "Pulling latest Docker image..."
        docker pull ghcr.io/frick-eldy/portfolio:latest

        echo "Restarting Docker container..."
        cd ~/portfolio
        docker compose down
        docker compose up -d
        
        echo "Deployment finished."
        EOF
